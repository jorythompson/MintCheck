[mint connection]
# username is the username to access mint
username: MINT@USERNAME.COM
# password is the password to access mint
password: MY_PASSWORD
# these two cookies are obtained from your browser when accessing mint (will be removed at a later date)
ius_cookie: THE_COOKIE I GOT FROM LOGGING INTO MINT
thx_guid_cookie: THE OTHER COOKIE I GOT FROM LOGGING INTO MINT
# remove_duplicates indicate duplicate entries should be removed
remove_duplicates: False
# any account name containing this keyword will be ignored.  This is set in Mint by renaming the account and adding this
# keyword
ignore_accounts_containing: duplicate

[debug]
# download indicates the data should be retrieved from mint.  If it doesn't, it will get the data from a previous
# download that stored its values in the pickle_file
mint_download: True
# saves the email as a file (as well as emails it, if set)
save_html: mailing.html
# mint_pickle_file is used to store the massaged collected data to be used if download is False
mint_pickle_file: MintCheck.pickle
# debugging indicates that additional debug (extremely verbose) logging should be turned on.
debugging: False
# sheets_download indicates that google sheets data should be downloaded
sheets_download: True
# copy_admin will copy admin_email (under the [General] section) with all emails
copy_admin: True
# attach_log indicates the log is to be attached to the admin_email in the general section
attach_log: False
# indicates that MintCheck should send emails (default is True)
send_email: True

[general]
# folder the pickle files are to be stored in
pickle_folder: pickle
# folder the html files are to be stored in
html_folder: html
# day of week your week starts on
week_start: monday
# day of the month the month starts on (typically for testing)
month_start: 1
# admin_email is a catch all email for sending logs and exceptions.  It is used as a last resort
admin_email: ADMIN@MY_HOME.COM
# users is a quoted, comma separated list of user sections (below) that are active.  Note that "all" is acceptable
users: "all", "USER_1", "USER_2"
# max_sleep is the time in minutes that MintCheck will sleep (if the --live parameter is passed in on the command line)
max_sleep: 0
# emails_to is a quoted, comma separated list of emails where debug information is to be sent in the event of an
# exception
exceptions_to:"EXCEPTION@RECIPIENT.COM"
# google sheet sections to parse from this file
google_sheets: "all", "first sheet", "second sheet"

[google_sheets]
# Google sheets are used to keep track of deposits that are made.  Typically, a deposit is prepaired at home or work,
# then taken to the bank for deposit.  This will validate the deposit is actually made by the bank.
# json file (obtained from Google)
json_file:MintCheck.json
# maximum days between actual deposit and when it shows up as a deposit in Mint
max_day_error: 7
# color of an entry that is paid
paid_color:blueviolet
# color of an entry that is not paid
unpaid_color:crimson

[first sheet]
# The name of this google sheet (found in the URL or the name entry)
# Tabs and sheets can have the following discriminators:
#   %Y year (i.e. 2016)
#   %B month (i.e. December)
sheet_name:My sheet %Y
# column where amount of deposit is found
amount_col:C
# column where notes about this deposit are found
notes_col:L
# column where date of deposit is found
date_col:A
# start row of deposits
start_row:30
# list of additional tabs to look (in the same columns and row)
tab_name: %B
# account these deposits should show up in
deposit_account:Fu Hwa Checking - 2213

[paid from]
# This section consists of credit: debit pairs.  In this example, my credit card is expected to be paid from my checking
# account (note that Mint Check does NOT actually do this!)  The will result in a separate table:
# "Required Balances in Debit Accounts Due Soon"
# Accounts in this table indicate a bill is coming up and where it is to be paid from.  Multiple credits for a single
# debit on the same day will be totaled so you know how much you should budget for
My Credit First Card: My Checking First Account
My Credit Second Card: My Checking First Account
My Credit Third Card: My Checking Second Account

[balance warnings]
# This section sets flags for accounts when the are below or above the specified amount.  Valid comparitors are <,>,=.
# When they fall ourside the values, the appear in a separate table:
#"Acounts with Balance Alerts"
# Each line consists of an account: comparator value
# "credit" and "bank" are special: If not specifically listed in this table, any credit account that falls outside of a
# comparitor will fall into the "credit" catch-all.  Similarly the "bank" catch-all
My First Checking Account: < 25
My First Credit Card: >25
# credit trumps any credit account not covered descretely above
credit: > 5000
# bank trumps any bank account not covered descretely above
bank: <10000

[colors]
# This section is list of colors, each followed with a quoted, comma separated list of keywords.  If a transaction has
# one of these keywords in it, it will be presented in the color specified
# tranactions with the following keywords (case sensitive) will appear in red
red: "fee", "charge"
# tranactions with the following keywords (case sensitive) will appear in purple
purple: "Toyota Car Loan"

[account_types]
# There are two types of accounts (bank and credit)  If they are listed, they will appear in the color specified (fg is
# foreground, bg is background).  If not specified, colors will be black and white respectively
bank_fg_color: green
credit_fg_color: orange

[past_due]
# This section describes colors of accounts that are near their due dates.
# days_before is the number of days before an account is due
days_before: 5
# If they are listed, they will appear in the color specified (fg is foreground, bg is background).  If not specified
# colors will be black and white respectively
fg_color: green
bg_color: red

[locale]
# locale is used when currencies are displayed.  Either or both linux and windows entries should be listed with the
# appropriate locale
Linux: en_US.utf8
Windows: us_us

[email connection]
# email connection is the account emails are sent from
# username is the username for the email account the emails will be sent from
username: MY.EMAIL@ACCOUNT.COM
# password is the password for the email account the emails will be sent from
password: MY_PASSWORD
# from is the pseudo name the emails originate
from: Mint Checker

# A user is any section that is not above this area.  It represents someone you want to share the information with.
# You may have as many users as you like.
[USER_1]
# emails are a comma separated list of quoted emails this report will be sent to
email: "USER.1@EMAIL.COM","USER.2@EMAIL.COM"
# subject is the subject of the email to be sent
subject: THE SUBJECT OF THIS EMAIL TO THIS USER
# active_accounts are accounts that have any activity in the period requested
# accounts may be the keyword "all" and/or a comma-separated list of accounts to share with this user.
active_accounts: "all", "ACCOUNT NAME FROM MINT", "ANOTHER ACCOUNT NAME FROM MINT"
# account_totals are accounts that you want balances for
# accounts may be the keyword "all" and/or a comma-separated list of accounts to share with this user.
account_totals: "all", "My Checking Account"
# ingore_accounts are accounts that are to be ignored (for example, if you have selected "all" for any section, accounts
# here will be ignored.
ignore_accounts: "all", "ACCOUNT NAME FROM MINT", "ANOTHER ACCOUNT NAME FROM MINT"
# frequency is a comma separated list of quoted strings which may be one or more of:
# "daily", weekly, monthly
frequency: "daily","weekly","monthly"
# rename_account allows for accounts to be renamed
# it is a list of key:value pairs where the key and value are quoted.  Here is an example:
# "original name":"new name","original name #2":"new name#2"
rename_account: "ACCOUNT NAME FROM MINT":"THE ACCOUNT NAME I WANT TO SHARE WITH THIS USER","ANOTHER ACCOUNT NAME FROM MINT":"THE ACCOUNT NAME I WANT TO SHARE WITH THIS USER FOR THIS ACCOUNT"
# rename_institution allwos for institutions to be renamed
# it is a list of key:value pairs where the key and value are quoted.  Here is an example:
# "original name":"new name","original name #2":"new name#2"
rename_institution: "INSTITUTION NAME FROM MINT":"THE INSTITUTION NAME I WANT TO SHARE WITH THIS USER","ANOTHER INSTITUTION NAME FROM MINT":"THE INSTITUTION NAME I WANT TO SHARE WITH THIS USER FOR THIS INSTITUTION"

[ANOTHER USER]
email:
subject:
active_accounts:
account_totals:
frequency:
rename_account:
rename_institution:
